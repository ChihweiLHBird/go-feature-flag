"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[4102],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function f(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=f(e,["components","mdxType","originalType","parentName"]),l=u(r),m=o,d=l["".concat(c,".").concat(m)]||l[m]||p[m]||i;return r?n.createElement(d,a(a({ref:t},s),{},{components:r})):n.createElement(d,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=l;var f={};for(var c in t)hasOwnProperty.call(t,c)&&(f[c]=t[c]);f.originalType=e,f.mdxType="string"==typeof e?e:o,a[1]=f;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},37711:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>f,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const i={},a="Custom Notifier",f={unversionedId:"notifier/custom",id:"version-v0.20.0/notifier/custom",title:"Custom Notifier",description:"To create a custom notifier you must have a struct that implements the ffnotifier.notifier interface.",source:"@site/versioned_docs/version-v0.20.0/notifier/custom.md",sourceDirName:"notifier",slug:"/notifier/custom",permalink:"/docs/v0.20.0/notifier/custom",draft:!1,editUrl:"https://github.com/thomaspoignant/go-feature-flag/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-v0.20.0/notifier/custom.md",tags:[],version:"v0.20.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Notifiers",permalink:"/docs/v0.20.0/notifier/"},next:{title:"Slack Notifier",permalink:"/docs/v0.20.0/notifier/slack"}},c={},u=[],s={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-notifier"},"Custom Notifier"),(0,o.kt)("p",null,"To create a custom notifier you must have a ",(0,o.kt)("inlineCode",{parentName:"p"},"struct")," that implements the ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/thomaspoignant/go-feature-flag/ffnotifier/notifier"},(0,o.kt)("inlineCode",{parentName:"a"},"ffnotifier.notifier"))," interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'linenums="1"',linenums:'"1"'},'import (\n    "fmt"\n    ffclient "github.com/thomaspoignant/go-feature-flag"\n    "github.com/thomaspoignant/go-feature-flag/ffnotifier"\n    "sync"\n)\n\n// Your config object to create a new Notifier\ntype CustomNotifierConfig struct{}\n\n// GetNotifier returns a notfier that implement ffnotifier.Notifier\nfunc (c *CustomNotifierConfig) GetNotifier(config ffclient.Config) (ffnotifier.Notifier, error) {\n    return &CustomNotifier{}, nil\n}\n\ntype CustomNotifier struct{}\nfunc (w *CustomNotifier) Notify(cache ffnotifier.DiffCache, waitGroup *sync.WaitGroup) {\n    defer waitGroup.Done() // don\'t forget this line, if you don\'t have it you can break your notifications\n    \n    // ...\n    // do whatever you want here\n}\n')))}p.isMDXComponent=!0}}]);