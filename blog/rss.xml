<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GO Feature Flag Blog</title>
        <link>https://gofeatureflag.org/blog</link>
        <description>GO Feature Flag Blog</description>
        <lastBuildDate>Mon, 20 Feb 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Lint your feature flag config in you CI/CD pipelines ❌ ✅]]></title>
            <link>https://gofeatureflag.org/blog/2023/02/20/lint-your-feature-flags</link>
            <guid>https://gofeatureflag.org/blog/2023/02/20/lint-your-feature-flags</guid>
            <pubDate>Mon, 20 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[As GO Feature Flag continues to evolve, we're excited to announce a new feature that will make it easier for our users to manage their feature flags.]]></description>
            <content:encoded><![CDATA[<p>As <strong>GO Feature Flag</strong> continues to evolve, we're excited to announce a new feature that will make it easier for our users to manage their feature flags.
We are introducing the ability to <strong>lint your feature flag configuration</strong>, which will help ensure that your feature flag configurations are correct and <strong>error-free</strong>.</p><p><img loading="lazy" alt="command line output" src="/assets/images/output-c9655f022f6bb296d6f3426a517b9148.png" width="1782" height="566" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introducing-go-feature-flag-lint">Introducing <code>go-feature-flag-lint</code><a href="#introducing-go-feature-flag-lint" class="hash-link" aria-label="Direct link to introducing-go-feature-flag-lint" title="Direct link to introducing-go-feature-flag-lint">​</a></h2><p>Managing feature flags can be challenging, especially when it comes to configuring them correctly.
With our new command line <a href="/docs/linter"><code>go-feature-flag-lint</code></a>, we are providing a tool that helps you avoid making mistakes in your feature flag configuration.</p><p>To use the feature flag configuration linting feature, simply run the command line, it will analyze your configuration to ensure that it is free of errors.
If there are any issues, <code>go-feature-flag-lint</code> will provide you with a detailed report that identifies the problem to help you to fix it.</p><p>To get the maximum benefit from this feature, we recommend integrating it into your <strong>CI/CD pipelines</strong> to catch any issues before they make it to production.</p><p>The benefits of using our feature flag configuration linting feature, along with integrating it into your CI/CD pipelines, include:</p><ul><li>Ensuring that your feature flag configuration is correct, which will reduce the risk of issues and errors in your application.</li><li>Saving time and effort by automating the process of checking your feature flag configuration.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-your-cicd-pipelines">Configure your CI/CD pipelines<a href="#configure-your-cicd-pipelines" class="hash-link" aria-label="Direct link to Configure your CI/CD pipelines" title="Direct link to Configure your CI/CD pipelines">​</a></h2><p>Integrating the feature flag configuration linting into your CI/CD pipeline is simple.
First, you will need to install the <code>go-feature-flag-lint</code> CLI tool, which can be used to run the linting process.
Next, you can add a new step to your pipeline that runs the <code>go-feature-flag-lint</code> CLI tool to lint your feature flag configuration file.</p><p>If there are any issues detected, the CLI tool will exit with a non-zero status code, which will cause your pipeline to fail.
By integrating the feature flag configuration linting into your CI/CD pipeline, you can catch any issues with your feature flag configuration before it is deployed to production, reducing the risk of errors and issues.</p><p>Here's some examples of how to integrate the feature flag configuration linting into a CI/CD pipeline for popular CI/CD services:</p><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP github_WvKj tabs__item--active">Github Action</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP circleci_0_Jr">CircleCi</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP gitlab_mHAN">Gitlab</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Build"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">push</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">pull_request</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">types</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token plain"> opened</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> synchronize</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> reopened </span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">Lint</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> Checkout repository</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> Download go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">L $(curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">s https</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain">//api.github.com/repos/thomaspoignant/go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag/releases/latest </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> jq </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">r '.assets</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> select(.name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain">match("Linux_x86_64.tar.gz$")) </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> .browser_download_url' </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> grep 'go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint') </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">output release.tar.gz </span><span class="token important">&amp;&amp;</span><span class="token plain"> tar </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">zxvf release.tar.gz</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> Run go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> ./go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">format=yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">file=flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">config.yaml </span><span class="token comment" style="color:rgb(0, 128, 0)"># please put the right file name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">version</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">2.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">docker</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">     </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> cimg/base</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token number" style="color:rgb(9, 134, 88)">2022.05</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> checkout</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">L $(curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">s https</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain">//api.github.com/repos/thomaspoignant/go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag/releases/latest </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> jq </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">r '.assets</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> select(.name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain">match("Linux_x86_64.tar.gz$")) </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> .browser_download_url' </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> grep 'go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint') </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">output release.tar.gz </span><span class="token important">&amp;&amp;</span><span class="token plain"> tar </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">zxvf release.tar.gz</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> ./go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">format=yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">file=flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">config.yaml </span><span class="token comment" style="color:rgb(0, 128, 0)"># please put the right file name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> ubuntu</span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token key atrule">lint-job</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> build</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">before_script</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> apt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">get </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">qq update</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> apt</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">get install </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">y jq curl</span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">L $(curl </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">s https</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain">//api.github.com/repos/thomaspoignant/go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag/releases/latest </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> jq </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">r '.assets</span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> select(.name</span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain">match("Linux_x86_64.tar.gz$")) </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> .browser_download_url' </span><span class="token punctuation" style="color:rgb(4, 81, 165)">|</span><span class="token plain"> grep 'go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint') </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">output release.tar.gz </span><span class="token important">&amp;&amp;</span><span class="token plain"> tar </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">zxvf release.tar.gz</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> ./go</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">lint </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">format=yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">file=flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">config.yaml </span><span class="token comment" style="color:rgb(0, 128, 0)"># please put the right file name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>We are thrilled to be introducing this new feature, which we believe will make a significant difference in how our users manage their feature flags. With the introduction of feature flag configuration linting, we are providing a tool that will make it easier for you to manage your feature flags and get the most out of GO Feature Flag.</p><p>If you have any questions about this feature or would like more information, please don't hesitate to get in touch with our support team. We're always here to help!</p>]]></content:encoded>
            <category>GO Feature Flag</category>
            <category>linter</category>
            <category>lint</category>
        </item>
        <item>
            <title><![CDATA[🚀 Announcing GO Feature Flag v1.0.0]]></title>
            <link>https://gofeatureflag.org/blog/2023/02/01/introducing-v1.0.0</link>
            <guid>https://gofeatureflag.org/blog/2023/02/01/introducing-v1.0.0</guid>
            <pubDate>Wed, 01 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[GO Feature Flag logo]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="GO Feature Flag logo" src="/assets/images/banner-34a26e8932ddeca9afc888ec3d0198a3.png" width="1531" height="597" class="img_ev3q"></p><h1>🚀 Announcing GO Feature Flag v1.0.0, get more from your feature flags</h1><p>We are so happy to finally announce that <strong>GO Feature Flag</strong> v1.0.0 is released. 🎉 🥳 🚀</p><p>It was a long journey before this release but we are happy to propose you an even better experience with feature flags always keeping simplicity in mind and building a lightweight solution.</p><p>Our goal is still the same, we want you to experience the world of feature flags with a lightweight self-hosted solution.</p><p>With this new version you will now be able to enhance your usage of feature flagging with opening the creation of more complex and more advance toggles.</p><h1>What is changing?</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="flag-configuration-format">Flag configuration format<a href="#flag-configuration-format" class="hash-link" aria-label="Direct link to Flag configuration format" title="Direct link to Flag configuration format">​</a></h2><p>The main change is the format of your flags configuration. </p><p>After using the version <code>v0.x.x</code> for quite some time we notice some limitation on the way our flag configuration was designed.
It was hard to return more than 2 different values with the same flag and we wanted to find a better way to represent our flags to be more extensible.</p><p>The new representation of the flag is a bit more verbose but allows a lot more possibility in the long term, being able to create more advanced flag.</p><p><strong>Old format:</strong></p><p>In the previous versions the flag representation was looking like this:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">test-flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">rule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> key eq "random</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">key"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see on this example you can only have a value for the <code>true</code> variation and for the <code>false</code> variation, the <code>default</code>variation was applying if the user was not part of the <code>rule</code>.</p><p><strong>New format:</strong></p><p>The same flag in the new format will looks like this:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">test-flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">variations</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">variation_A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">variation_B</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">targeting</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> key eq "random</span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain">key"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">variation_B</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">variation_A</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">defaultRule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">variation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> variation_B</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>With the new format you have an unlimited number of variation possible you can define but also more than one rule for a specific flag.</p><p>It allows to target different types of users with different values for the same feature flag.</p><p>Let’s take a real life example, we want to get the background color for our website based on this criterias:</p><ul><li><code>pro</code> users should have a red background</li><li><code>enterprise</code> users should have a green background</li><li><strong>40%</strong> of the <code>free</code> users should have a <strong>grey</strong> background and <strong>60%</strong> a <strong>yellow</strong> background</li><li><strong>other types</strong> of user have a white background</li></ul><p>We can come-up with a flag, the configuration will look like this:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">user-background-color</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">variations</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">pro</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">#ff1f00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">enterprise</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">#114f03</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">free_grey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">#b0b3af</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">free_yellow</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">#ecec0a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">#ffffff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">targeting</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> type eq "pro"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">variation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> pro</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> type eq "enterprise"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">variation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> enterprise</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">query</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> type eq "free"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">free_grey</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">free_yellow</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">defaultRule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">variation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> default</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see we can have a way more advanced flag configuration with this new format. This format is solving all the limitation we had with the version <code>v0.x.x</code> of <strong>GO Feature Flag</strong>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrate-from-v0xx-to-v1xx">Migrate from v0.x.x to v1.x.x<a href="#migrate-from-v0xx-to-v1xx" class="hash-link" aria-label="Direct link to Migrate from v0.x.x to v1.x.x" title="Direct link to Migrate from v0.x.x to v1.x.x">​</a></h3><p>First of all you should know that all flags from the version <code>v0.x.x</code> are still compatible with this new version of <strong>GO Feature Flag</strong>. We made it possible to reduce the disagreement to have to convert all your flag directly.</p><p><strong>BUT</strong> we encourage you to migrate your flag to the new version and for this we have created a tool called <code>go-feature-flag-migration-cli</code> to convert flags in <code>v0.x.x</code> format to <code>v1.0.0</code> format.</p><p>The easiest way to use it is probably to use our docker image like this:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token function" style="color:rgb(0, 0, 255)">docker</span><span class="token plain"> run </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  -v </span><span class="token variable" style="color:rgb(9, 134, 88)">$(</span><span class="token variable builtin class-name" style="color:rgb(38, 127, 153)">pwd</span><span class="token variable" style="color:rgb(9, 134, 88)">)</span><span class="token plain">/your/configuration_folder:/config </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  thomaspoignant/go-feature-flag-migration-cli:latest </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  --input-format</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  --input-file</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">/config/my-go-feature-flag-config-v0.x.x.yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  --output-format</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">yaml </span><span class="token punctuation" style="color:rgb(4, 81, 165)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  --output-file</span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain">/config/my-go-feature-flag-config-v1.x.x.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">​</a></h2><p>We use the opportunity of the <code>v1.0.0</code> to revamp our documentation and to highlight how you can use <strong>GO Feature Flag</strong> in 2 different modes.</p><ul><li><strong>The GO module</strong>, this is where we started and this is the core of what we propose. In the documentation you will find all the information on how to use the module into your GO project.</li><li>Using <strong>Open-Feature</strong>, the new open-source vendor agnostic standard for feature flags. You can use the <code>relay-proxy</code> our server component that allows to use <strong>GO Feature Flag</strong> with multiple languages <em>(for now we support <code>javascript</code>, <code>typescript</code>, <code>java</code>, <code>GO</code> and <code>.Net</code>)</em>. In the documentation you will find how to use the <strong>GO Feature Flag providers</strong> in combination with the <strong>Open Feature SDKs</strong>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="flag-editor">Flag Editor<a href="#flag-editor" class="hash-link" aria-label="Direct link to Flag Editor" title="Direct link to Flag Editor">​</a></h2><p>Our old flag editor was not compatible anymore with the new <code>v1.0.0</code> flag format. </p><p>So we decided to restart our flag editor from scratch and to allow the possibility to create flags configuration from a simple UI. </p><p><img loading="lazy" alt="Kapture 2023-01-20 at 16.16.50.gif" src="/assets/images/flag_editor-53ff4148297fa5d57431ab268cd5e52c.gif" width="639" height="524" class="img_ev3q"></p><p>For now it is a tiny UI that make your life easier, but the goal is to evolve it more and more to be the place where you want to go to build your new feature flags.</p><h1>What has not changed?</h1><p>Yes a lot of things have changed but our internals are solids and we have ensure to be consistent with the previous versions.</p><p>Our main points of attention where the following:</p><ul><li>User segmentation is similar between <code>v0.x.x</code> and <code>v1.0.0</code> meaning that if a user was affected by a flag (in a percentage for example) he will continue to be in the same cohort.</li><li>All <code>retrievers</code> and data <code>exporters</code> have not changed and are still working exactly the same way as before.</li><li>You can continue using <strong>GO Feature Flags</strong> with your old flags.</li><li>Moving to the version <code>v1.0.0</code> is transparent and you just have to change the version.</li><li>You can still use our advance rollout capabilities such as <strong>experimentation</strong>, <strong>scheduled rollout</strong>, <strong>progressive rollout …</strong></li></ul><h1>Feedback</h1><p>Feedbacks is our only way to evolve GO Feature Flag, so please contact us to give us any feedback.</p><ul><li>Via <a href="mailto:contact@gofeaturegflag.org" target="_blank" rel="noopener noreferrer">email</a></li><li>Via a <a href="https://github.com/thomaspoignant/go-feature-flag/issues/new/choose" target="_blank" rel="noopener noreferrer">GitHub Issue</a></li></ul>]]></content:encoded>
            <category>GO Feature Flag</category>
            <category>Open Feature</category>
            <category>release</category>
        </item>
        <item>
            <title><![CDATA[🔊 Feature Flags in Dev’Obs Podcast 🇫🇷]]></title>
            <link>https://gofeatureflag.org/blog/2022/07/01/feature-flags-devobs-podcast</link>
            <guid>https://gofeatureflag.org/blog/2022/07/01/feature-flags-devobs-podcast</guid>
            <pubDate>Fri, 01 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Earlier this week the super cool podcast Dev’Obs asked me to talk about feature flags, go-feature-flag and also the super nice initiative OpenFeature.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" src="/assets/images/devobs-d52cbdd84643dd3ff2668f65eed0f26b.jpg" width="1400" height="933" class="img_ev3q"></p><p>Earlier this week the super cool podcast Dev’Obs asked me to talk about feature flags, go-feature-flag and also the super nice initiative OpenFeature.</p><p>The podcast is in French 🇫🇷 (yes I know sorry…) but you can learn a lot of cool things, when to use them, what is OpenFeature about and all the cool things that the feature flags can bring to your developer experience.</p><p>Listen it here: <a href="https://www.listennotes.com/podcasts/devobs/devobs-24-feature-flags-rknRoFGL7N5/" target="_blank" rel="noopener noreferrer">https://www.listennotes.com/podcasts/devobs/devobs-24-feature-flags-rknRoFGL7N5/</a></p>]]></content:encoded>
            <category>GO Feature Flag</category>
            <category>Openfeature</category>
            <category>Podcast</category>
        </item>
        <item>
            <title><![CDATA[Automate Your Product Release Cycles Using Go Feature Flag]]></title>
            <link>https://gofeatureflag.org/blog/automate-your-product-release-cycles-using-go-feature-flag</link>
            <guid>https://gofeatureflag.org/blog/automate-your-product-release-cycles-using-go-feature-flag</guid>
            <pubDate>Wed, 26 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[When you build a new feature, orchestrating the actual launch schedule between the Product, Engineering, and Marketing teams can be challenging.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" src="/assets/images/head-fde6026d2dea516f2cc2afbb10cf20c4.jpg" width="6000" height="4000" class="img_ev3q"></p><p>When you build a new feature, orchestrating the actual launch schedule between the Product, Engineering, and Marketing teams can be challenging.</p><p>While it seems easy to launch something new, a poorly executed rollout can end up being your worst nightmare.</p><p>In this article, I will present to you how to use the Go module go-feature-flag to roll out your new features smoothly and help you be confident during the rollout phase. If you are not familiar with the concept of feature flags or feature toggles, I encourage you to read this <a href="https://www.martinfowler.com/articles/feature-toggles.html" target="_blank" rel="noopener noreferrer">article by Martin Fowler</a>.</p><p>go-feature-flag is a Go module to easily manage your flags. You can refer to this article I wrote a few months ago to understand how it works.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-use-go-feature-flag">How To Use go-feature-flag<a href="#how-to-use-go-feature-flag" class="hash-link" aria-label="Direct link to How To Use go-feature-flag" title="Direct link to How To Use go-feature-flag">​</a></h2><p>The library is super simple to use:</p><ol><li>Install the module:</li></ol><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">go</span><span class="token plain"> get github</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">com</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token plain">thomaspoignant</span><span class="token operator" style="color:rgb(0, 0, 0)">/</span><span class="token keyword" style="color:rgb(0, 0, 255)">go</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">feature</span><span class="token operator" style="color:rgb(0, 0, 0)">-</span><span class="token plain">flag</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Init the client with the location of your configuration file for your flags:</li></ol><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">err </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">Init</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">Config</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    PollInterval</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">60</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Retriever</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">HTTPRetriever</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        URL</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"http://example.com/flag-config.yaml"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">defer</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">Close</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Put your new features conditionally based on the flag value:</li></ol><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">user </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffuser</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">NewUser</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"user-unique-key"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">hasFlag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token boolean">_</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">BoolVariation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"test-flag"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> user</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> hasFlag </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// flag "test-flag" is true for the user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// flag "test-flag" is false for the user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can have way more configuration, but I’ll let you check the <a href="https://thomaspoignant.github.io/go-feature-flag/" target="_blank" rel="noopener noreferrer">documentation</a> for that.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="progressive-rollout">Progressive Rollout<a href="#progressive-rollout" class="hash-link" aria-label="Direct link to Progressive Rollout" title="Direct link to Progressive Rollout">​</a></h2><p>When you release a new feature that can have a strong impact on your system, you probably don’t want to go all-in with this new feature for all your users.</p><p>For example, you are deploying something that can be CPU-consuming and you want to have time to check if your servers handle it correctly. This is typically a great use case for a progressive rollout.</p><p>It progressively increases how many users are impacted by your feature flag to avoid a big-bang rollout for all your users at once. During that time, it allows you to monitor your system and be confident that your infrastructure can handle this new load.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">progressive-flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">rollout</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">progressive</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">initial</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">end</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">releaseRamp</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">start</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2021-03-20T00:00:00.10-05:00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token key atrule">end</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2021-03-21T00:00:00.10-05:00</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To do that in go-feature-flag, you will configure your flag like in the example above. You set up a progressive rollout with an initial percentage value and a release ramp. Over time, more and more users can be affected by the flag and will have the new feature.</p><p>Depending on how critical this feature is, you can have a long or a short release ramp. If something goes wrong, you can edit your flag to stop the rollout at any time.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="scheduling-workflows">Scheduling Workflows<a href="#scheduling-workflows" class="hash-link" aria-label="Direct link to Scheduling Workflows" title="Direct link to Scheduling Workflows">​</a></h2><p>Scheduling introduces the ability for users to change their flags for future points in time. While this sounds deceptively straightforward, it unlocks the potential for users to create complex release strategies by scheduling the incremental steps in advance.</p><p>For example, you may want to turn a feature on for internal testing tomorrow and then enable it for your “beta” user segment four days later.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">scheduled-flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">rollout</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">scheduled</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(4, 81, 165)">-</span><span class="token plain"> </span><span class="token key atrule">date</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2020-04-10T00:00:00.00+02:00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token key atrule">rule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> internal eq true</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token key atrule">100        - date</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2020-04-14T00:00:00.00+02:00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token key atrule">rule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token key atrule">internal eq true and beta eq true        - date</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2020-04-18T00:00:00.00+02:00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">          </span><span class="token key atrule">rule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">""</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, you can see that we are updating the flag multiple times to perform actions in the future. Let’s detail what will happen in this configuration:</p><ol><li>Before <code>2020–04–10</code>, the flag is not served.</li><li>After the first update of the flag (<code>2020–04–10</code>), we have 100% of the internal users who received the flag as true.</li><li>Four days later, we add the users who have a <code>bet</code>a flag as <code>true</code>.</li><li>Finally, four days later, we open the feature to all users.</li></ol><p>As you can see, this is really powerful because your release management is now ready without doing any manual deployment/action, and this scheduling can be done by a non-technical user (aka your product manager).</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="experimentation-rollout">Experimentation Rollout<a href="#experimentation-rollout" class="hash-link" aria-label="Direct link to Experimentation Rollout" title="Direct link to Experimentation Rollout">​</a></h2><p>Sometimes you also want to experiment, collect the data, and decide later if you want to roll out the feature to all your users.</p><p>To do that correctly, you can configure your flag with a start date and an end date for a subset of your users.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token key atrule">experimentation-flag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">percentage</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">true</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">default</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">rule</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> userId sw "9"</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token key atrule">rollout</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token key atrule">experimentation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">start</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2021-03-20T00:00:00.10-05:00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">      </span><span class="token key atrule">end</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token datetime number" style="color:rgb(9, 134, 88)">2021-03-21T00:00:00.10-05:00</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, 50% of your users with a userId that starts with 9 will be impacted by the flag between the start and the end dates of the experimentation.</p><p>With the module, you can also collect the data of your variation (see the <a href="https://thomaspoignant.github.io/go-feature-flag/data_collection/" target="_blank" rel="noopener noreferrer">documentation</a> for more info) to join them with the data of what you are testing.</p><p>So you can see the results of your experimentation and decide whether you want to roll out this flag for real or not.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>Using feature flags really is a great thing, but it becomes even better if you use some advanced rollout strategies.</p><p>If you start using them, you will love it because you decouple the deployment and the release and you can have fine-grained control over what your users can do.</p>]]></content:encoded>
            <category>GO Feature Flag</category>
            <category>v0.x.x</category>
        </item>
        <item>
            <title><![CDATA[Introduction blog post]]></title>
            <link>https://gofeatureflag.org/blog/introduction-blog-post</link>
            <guid>https://gofeatureflag.org/blog/introduction-blog-post</guid>
            <pubDate>Mon, 11 Jan 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[I absolutely don’t think human/manual QA gates should be involved in between the writing of code and its being live. To avoid breaking things every time and to have an early cutoff system, you should use feature flags.]]></description>
            <content:encoded><![CDATA[<center><p>  <img loading="lazy" src="/assets/images/logo-26e5adbbf02da2d72eb5d51280cc5ba9.png" width="400" height="380" class="img_ev3q"></p></center><p>I absolutely don’t think human/manual QA gates should be involved in between the writing of code and its being live. To avoid breaking things every time and to have an early cutoff system, you should use feature flags.</p><p>There are a lot of systems available on the market to manage your flags, like <a href="https://launchdarkly.com/" target="_blank" rel="noopener noreferrer">LaunchDarkly</a> or <a href="https://unleash.org/" target="_blank" rel="noopener noreferrer">UNLEASH</a>, that have Golang support — but this option is expensive, and you have to host a server somewhere to manage your flags.</p><p>From this starting point, I came up with the idea to create a simple library with only one file in the back end. This file can be stored in different places (AWS S3, GitHub, an HTTP endpoint somewhere, etc.). This is the only thing you have to host — all the decision logic stands inside the Go module.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-a-new-solution">Why a new solution?<a href="#why-a-new-solution" class="hash-link" aria-label="Direct link to Why a new solution?" title="Direct link to Why a new solution?">​</a></h2><p>There are some solutions available for Go to manage feature flags. I can classify them into two categories:</p><ul><li>You need to run a specific service: <a href="https://github.com/markphelps/flipt" target="_blank" rel="noopener noreferrer">markphelps/flipt</a>, <a href="https://github.com/checkr/flagr" target="_blank" rel="noopener noreferrer">checkr/flagr</a>, <a href="https://github.com/Unleash/unleash" target="_blank" rel="noopener noreferrer">Unleash/unleash</a>, <a href="https://github.com/vsco/dcdr" target="_blank" rel="noopener noreferrer">vsco/dcdr</a>, etc.</li><li>You need to have a database: <a href="https://github.com/xchapter7x/toggle" target="_blank" rel="noopener noreferrer">xchapter7x/toggle</a>, <a href="https://github.com/AntoineAugusti/feature-flags" target="_blank" rel="noopener noreferrer">AntoineAugusti/feature-flags</a>, etc.</li></ul><p>All of these solutions are great and have a lot of features, but I was a bit worried about having a full setup with things to install before doing feature flags on a basic service.</p><p>I don’t want to host/maintain/monitor a full feature-flag system if my needs are really small.</p><p>So I decided to make go-feature-flag, a simple and easy-to-implement feature-flag system, with no back end at all except a shared configuration file you can store anywhere (S3, GitHub, HTTP endpoint, etc.).</p><p>The goal is to experience the usage of feature flags without a complex solution, and if you end up liking it and need a more advanced pattern, you can go to any open-source solution or SaaS solution — like LaunchDarkly, for example.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-it-work">How Does It Work?<a href="#how-does-it-work" class="hash-link" aria-label="Direct link to How Does It Work?" title="Direct link to How Does It Work?">​</a></h2><p>How this Go module works is easy. It just reads the shared file every x seconds and gives you a way to get the value of your flag in the type you expect.</p><p><img loading="lazy" src="/assets/images/sdk-explanation-a10220a7d1f500bcd9ebad26dffec168.jpg" width="1695" height="589" class="img_ev3q"></p><p>As you can see, what go-feature-flag is providing is a way for you to keep in sync with the feature-flag config file. It also allows you to evaluate the flag for your users.</p><p>A rule system based on <a href="https://github.com/nikunjy/rules" target="_blank" rel="noopener noreferrer">nikunjy/rules</a> allows you to specify complex rules to apply the flag only for a subset of your users.</p><p>The percentage allows you to select which percentage of users will get the true value, but I’m sure you wonder how the repartition is done. It’s really easy — we’re doing a hash of the key of the user with the flag name used as a salt (it guarantees that the repartition isn’t always to the same users).</p><p><img loading="lazy" src="/assets/images/code-32fe376c0c545b7131c562369bb98a3e.png" width="700" height="266" class="img_ev3q"></p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-use-it">How to Use It<a href="#how-to-use-it" class="hash-link" aria-label="Direct link to How to Use It" title="Direct link to How to Use It">​</a></h2><p>The main goal of go-feature-flag is to be super simple so you don’t have much to do in order to use it.</p><ul><li>The first thing to do is host your config file somewhere (S3, GitHub, etc.)</li><li>During app initialization, init go-feature-flag with a configuration:</li></ul><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">err </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">Init</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token plain">ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">Config</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    PollInterval</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">3</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    Retriever</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">&amp;</span><span class="token plain">ffClient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">HTTPRetriever</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">        URL</span><span class="token punctuation" style="color:rgb(4, 81, 165)">:</span><span class="token plain">    </span><span class="token string" style="color:rgb(163, 21, 21)">"https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/testdata/test.yaml"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">defer</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">Close</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>Now that you’ve done an init on go-feature-flag, you can see the value of the flag for your users, with something like this:</li></ul><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">user </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffuser</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">NewUser</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"user-unique-key"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">hasFlag</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token boolean">_</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">:=</span><span class="token plain"> ffclient</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">BoolVariation</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"test-flag"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> user</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">if</span><span class="token plain"> hasFlag </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// flag "test-flag" is true for the user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    </span><span class="token comment" style="color:rgb(0, 128, 0)">// flag "test-flag" is false for the user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Note</strong>: Your variation will return the default value (the last parameter) if you have an error (flag not present, wrong type, etc.).</p><ul><li>It’s a basic example, but you can put as many properties as you want for your User to make complex queries on your flag</li></ul><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token plain">user </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> ffuser</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">NewUserBuilder</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"user-unique-key"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">AddCustom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"firstname"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"John"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">AddCustom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"lastname"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"Doe"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">AddCustom</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"email"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"john.doe@example.com"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">Build</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This allows you to have a rule like <code>email eq "john.doe@example.com"</code> to select a specific user with your flag.</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What’s Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What’s Next?" title="Direct link to What’s Next?">​</a></h2><p>As you can see go-feature-flag is simple, and the goal is to keep it as simple as possible. But this doesn’t mean it’s finished.</p><p>For now, I see an evolutionary path for go-feature-flag: First, it should be able to store the flag config file anywhere, so we have to support more retrievers. The second thing is to get more feedback. For now, we’re logging some stuff, but maybe some users would like to have a webhook or Slack notification.</p><p>go-feature-flag is also open to contribution, so if you want to contribute any ideas or help, I’d really love to hear from you concerning what you think about this library and what you want in it.</p><p>So feel free to write <a href="https://github.com/thomaspoignant/go-feature-flag/discussions" target="_blank" rel="noopener noreferrer">a discussion</a> on GitHub, open an <a href="https://github.com/thomaspoignant/go-feature-flag/issues" target="_blank" rel="noopener noreferrer">issue</a>, or send me an <a href="mailto:contact@gofeatureflag.org" target="_blank" rel="noopener noreferrer">email</a>.</p>]]></content:encoded>
            <category>GO Feature Flag</category>
            <category>v0.x.x</category>
        </item>
    </channel>
</rss>